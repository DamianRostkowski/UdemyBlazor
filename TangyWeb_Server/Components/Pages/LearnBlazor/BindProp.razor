@page "/bindProp";
@rendermode InteractiveServer
<PageTitle>Bind Prop</PageTitle>
<h2 class="text-success">Invidual Product</h2>
<div class="row">
    <div class="col-6 border p-3 ">
        <h3 class="text-primary">Product Summary</h3> <hr />
        Name: @Product.Name <br />
        This product is @(Product.IsActive ? "active" : "inactive") <br />
        Property Selected: @selectedProp <br />
        @if (!String.IsNullOrWhiteSpace(selectedProp))
        {
            <p>Property Value: @Product.ProductProperties.FirstOrDefault(x => x.Key == selectedProp).Value </p>
        }
        Price: @Product.Price
    </div>
    <br />
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3> <hr />
        <div>
            Price: <input type="number" @bind="@Product.Price" @bind:event="oninput" /> <br />
        </div>
        <br />
        <div>
            Active: <input type="checkbox" @bind="Product.IsActive" /> <br />
        </div>
        <br />
        <div>
            Product Properties:
            <select @bind="@selectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
    </div>
    <div class="col12">
        <h2 class="text-success pt-4">Product Table</h2>
        <table class="table table-striped">
            <tbody>
                @foreach (var item in Products)
                {
                    <tr>
                        <td>
                            <input @bind="item.Name" @bind:event="oninput" />
                        </td>
                        <td>
                            <input type="number" @bind="item.Price" @bind:event="oninput" />
                        </td>
                        <td>
                            <input type="checkbox" @bind="item.IsActive"/>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <h2>Product Summary</h2>
        @foreach (var item in Products)
        {
            <p>@item.Name [@item.Price] is @(item.IsActive?"active":"inactive")</p>
        }
    </div>
</div>


@code {
    private string selectedProp = "";
    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp {Id = 1, Key = "Color", Value = "Black"},
                new Demo_ProductProp {Id = 2, Key = "Flavor", Value = "Rose Jasmine"},
                new Demo_ProductProp {Id = 3, Key = "Size", Value = "20oz"},
            }
        };
    List<Demo_Product> Products = new();
    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                ProductProperties = new List<Demo_ProductProp>()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }
}
